services:

  app:
    build:
      context: .
    environment:
      BACKEND: ${BACKEND}
      BROKER: ${BROKER}
    entrypoint: python main.py
    volumes:
      - ./:/app
    depends_on:
      celery:
        condition: service_started
      broker:
        condition: service_healthy
      db:
        condition: service_healthy

  celery:
    build:
      context: .
    environment:
      BACKEND: ${BACKEND}
      BROKER: ${BROKER}
    entrypoint: celery -A tasks.celery_app worker
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy

  broker:
    image: rabbitmq:4-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
        test: ["CMD", "rabbitmqctl", "status"]
        interval: 5s
        timeout: 5s
        retries: 3



  db:
    image: postgres:15.3
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
